---
title: "Mapd'O Network metrics exploration"
subtitle: "Progress meeting 22.04.2024"
author: "Leo Helling"
title-slide-attributes:
  data-background-color: "#023e8a"
---

```{r set-up}
#| echo: false
#| output: false
library(tidyverse)
require(RPostgreSQL)
require(DataExplorer) # general dataset exploration
library(factoextra) # for pca-biplots 
library(sf) # geospatial manipulations
library(mapview) # geospatial visualisation
source("src/f_explo.R")
source("src/f_database.R")

# load network metrics
network_metrics <- load_network_metrics()

# create network sf-file
network_sf <- load_metrics_sf(network_metrics)

# create datasets
data_all <- network_metrics|> dplyr::select("strahler":"sum_area")
data_discrete <- network_metrics|> dplyr::select("strahler":"built_environment", "sum_area")
data_relative <- network_metrics|> dplyr::select("fid", "strahler":"floodplain_slope", "water_channel_pc":"sum_area")
```

## Points

-   Dataset overview

-   Variable cleaning

-   Principal Component Analysis

-   K-means Clustering

-   Hidden-Markov-Modeling

-   Next steps

## Dataset overview

::: panel-tabset
### Map

```{r map}
#| echo: false
# out-width: "50%"

# plot network 
plot(network_sf |> dplyr::select())
# mapview::mapview(network_sf |> dplyr::select(strahler))
```

### Variables

```{r variable overview}
# plot histograms for all variables
DataExplorer::plot_histogram(data_all, nrow = 4)
```

### Correlation: real Vars

```{r corr discrete}
#| echo: false
#| warning: false

DataExplorer::plot_correlation(data_discrete, title = "Correlation Matrix of discrete variables")
```

### Correlation: Norm. Vars

```{r corr normalized}
#| echo: false
#| warning: false

DataExplorer::plot_correlation(data_relative |> dplyr::select(!fid), title = "Correlation Matrix of relative variables")
```

Dataset containing only the normalized variables for the land use and lateral continuity (area normalized to the valley bottom area)
:::

## Variable cleaning

::: panel-tabset
### Description

Based on high values of correlation and similarities in the PCA, the following variables are removed:

-   `floodplain_slope` as it is represented well by `talweg_slope`
-   `gravel_bars_pc` as it is represented well in `active_channel_pc`
-   `water_channel_width` as it is represented well in `active_channel_width`
-   `valley_bottom_width` by `sum_area`
-   `semi_natural_pc` as it is falsely calculated and only represents `grassland_pc`
-   `reversible_pc` as as it is falsely calculated and only represents `grassland_pc` and `crops_pc`
-   `infrastructures_pc`, `dense_urban_pc`, and `diffuse_urban_pc` are well represented by `built_environment_pc`
-   `natural_corridor_width` represented well by `connected_corridor_width`

### Cleaned dataset

```{r corr cleaned}
#| echo: false
#| warning: false

variables_remove <- c("floodplain_slope", "gravel_bars_pc", "water_channel_width",
                      "valley_bottom_width", "semi_natural_pc", "infrastructures_pc",
                      "dense_urban_pc", "diffuse_urban_pc", "natural_corridor_width", "reversible_pc")

data_cleaned_pc <- data_relative |> dplyr::select(!variables_remove)
DataExplorer::plot_correlation(data_cleaned_pc |> dplyr::select(!fid), title = "Correlation Matrix of cleaned dataset")
```
:::

## PCA

::: panel-tabset
### cleaned dataset

```{r}
#| echo: false
#| warning: false

DataExplorer::plot_prcomp(data_cleaned_pc |> dplyr::select(!fid), variance_cap = 0.9, nrow = 2L, ncol = 2L, title = "PCA of cleaned variables")

# Biplots generation
pca_cleaned <- prcomp(data_cleaned_pc |> dplyr::select(!fid), 
                      scale = TRUE)

factoextra::fviz_pca_ind(pca_cleaned,
                         label = "none",
                         col.ind = "cos2",
                         alpha.ind = 0.7,
                         gradient.cols = c("#03045e","#caf0f8","#d62828"),
                         title = "PCA-Biplot 1-2: Quality of representation of individuals")

factoextra::fviz_pca_var(pca_cleaned,     
                         label = "var",
                         select.var = list(contrib = 10),
                         repel = T,
                         title = "PCA-Biplot 1-2: contribution of first 10 variables")

factoextra::fviz_pca_ind(pca_cleaned,
                         axes = c(1,3),
                         label = "none",
                         col.ind = "cos2",
                         alpha.ind = 0.7,
                         gradient.cols = c("#03045e","#caf0f8","#d62828"),
                         title = "PCA-Biplot 1-3: Quality of representation of individuals")

factoextra::fviz_pca_var(pca_cleaned,
                         axes = c(1,3),
                         label = "var",
                         select.var = list(contrib = 10),
                         repel = T,
                         title = "PCA-Biplot 1-3: contribution of first 10 variables")

factoextra::fviz_pca_ind(pca_cleaned,
                         axes = c(1,4),
                         label = "none",
                         col.ind = "cos2",
                         alpha.ind = 0.7,
                         gradient.cols = c("#03045e","#caf0f8","#d62828"),
                         title = "PCA-Biplot 1-4: Quality of representation of individuals")

factoextra::fviz_pca_var(pca_cleaned,
                         axes = c(1,4),
                         label = "var",
                         select.var = list(contrib = 10),
                         repel = T,
                         title = "PCA-Biplot 1-4: contribution of first 10 variables")
```

According to the results, the first four principal components are sufficient to represent 64.5 % of the variability of the data set. In the following, each of these PCs is analysed according to the individual association of the variables to them in order to facilitate interpretation.

+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| PC      | Description                                                                                                                                                                                         |
+=========+=====================================================================================================================================================================================================+
| **PC1** | ***Positive values** indicate* *large rivers in wide valleys with low slopes and low elevations, with comparably small riparian corridor and diverse anthropogenic activity in the adjacent areas.* |
|         |                                                                                                                                                                                                     |
|         | ***Negative values** indicate smaller rivers in narrow valleys with higher slopes and elevations, with a greater relative area for the riparian corridor and less activity in the adjacent areas.*  |
|         |                                                                                                                                                                                                     |
|         | -   positive variable importance: `sum_area`, `strahler`, `connected_corridor_width`, `active_channel_width`, `crops_pc`, `disconnected_pc`                                                         |
|         |                                                                                                                                                                                                     |
|         | -   negative variable importance:`talweg_slope`, `talweg_elevation_min`, `riparian_corridor_pc`                                                                                                     |
+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **PC2** | ***Positive values** indicate rather narrow valleys in which most of the space is taken by the water channel with few space for the connected corridor and crops.*                                  |
|         |                                                                                                                                                                                                     |
|         | ***Negative values** indicate wide valleys with smaller channel width to valley width ratios and larger shares of connected corridor and crops.*                                                    |
|         |                                                                                                                                                                                                     |
|         | -   positive VI: `water_channel_pc`, `idx_confinement`, `active_channel_width`                                                                                                                      |
|         |                                                                                                                                                                                                     |
|         | -   negative VI: `sum_area`, `crops_pc`, `disconnected_pc`, `connected_corridor_width`                                                                                                              |
+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **PC3** | ***Positive values** indicate comparably large and forested riparian corridors in lower elevations with few grassland and natural open area.*                                                       |
|         |                                                                                                                                                                                                     |
|         | ***Negative values** thus indicate comparably small and unforested riparian corridors in higher elevations and with more natural open areas and grasslands.*                                        |
|         |                                                                                                                                                                                                     |
|         | -   positive VI: `riparian_corridor_pc`, `forest_pc`                                                                                                                                                |
|         |                                                                                                                                                                                                     |
|         | -   negative VI: `talweg_elevation_min`, `natural_open_pc`, `grassland_pc`                                                                                                                          |
+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| **PC4** | ***Positive values** indicate rather smaller, confined streams with a strong presence of anthropogenic infrastructure.*                                                                             |
|         |                                                                                                                                                                                                     |
|         | ***Negative values** thus indicate comparably larger rivers with more space for the active channel and no presence of built/anthropogenic infrastructure in the adjacent zones.*                    |
|         |                                                                                                                                                                                                     |
|         | -   positive VI: `riparian_corridor_pc`, `forest_pc`                                                                                                                                                |
|         |                                                                                                                                                                                                     |
|         | -   negative VI: `talweg_elevation_min`, `natural_open_pc`, `grassland_pc`, `idx_confinement`, `crops_pc`, `active_channel_width`, `connected_corridor_width`                                       |
+---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

: Characteristics of principal components

### whole dataset

```{r PCA all variables}
#| echo: false
#| warning: false

DataExplorer::plot_prcomp(data_all, variance_cap = 0.7, nrow = 1L, ncol = 2L, title = "PCA of discrete variables")

# Biplots generation
pca_all <- prcomp(data_all, 
                  scale = TRUE)

factoextra::fviz_pca_ind(pca_all,
                         label = "none",
                         col.ind = "cos2",
                         alpha.ind = 0.7,
                         gradient.cols = c("#03045e","#caf0f8","#d62828"),
                         title = "PCA-Biplot 1-2: Quality of representation of individuals")

factoextra::fviz_pca_var(pca_all,     
                         label = "var",
                         select.var = list(contrib = 10),
                         repel = T,
                         title = "PCA-Biplot 1-2: contribution of first 10 variables")
```

### only real vars

```{r PCA discrete variables}
#| echo: false
#| warning: false

DataExplorer::plot_prcomp(data_discrete, variance_cap = 0.9, nrow = 2L, ncol = 2L, title = "PCA of discrete variables")

# Biplots generation
pca_dis <- prcomp(data_discrete, 
                  scale = TRUE)

factoextra::fviz_pca_ind(pca_dis,
                         label = "none",
                         col.ind = "cos2",
                         alpha.ind = 0.7,
                         gradient.cols = c("#03045e","#caf0f8","#d62828"),
                         title = "PCA-Biplot 1-2: Quality of representation of individuals")

factoextra::fviz_pca_var(pca_dis,     
                         label = "var",
                         select.var = list(contrib = 10),
                         repel = T,
                         title = "PCA-Biplot 1-2: contribution of first 10 variables")
```

### only norm. vars

```{r}
#| label: PCA relative variables
#| echo: false
#| warning: false

DataExplorer::plot_prcomp(data_relative |> dplyr::select(!fid), variance_cap = 0.9, nrow = 2L, ncol = 2L, title = "PCA of relative variables")

# Biplots generation
pca_rel <- prcomp(data_relative |> dplyr::select(!fid), 
                  scale = TRUE)

factoextra::fviz_pca_ind(pca_rel,
                         label = "none",
                         col.ind = "cos2",
                         alpha.ind = 0.7,
                         gradient.cols = c("#03045e","#caf0f8","#d62828"),
                         title = "PCA-Biplot 1-2: Quality of representation of individuals")

factoextra::fviz_pca_var(pca_rel,     
                         label = "var",
                         select.var = list(contrib = 10),
                         repel = T,
                         title = "PCA-Biplot 1-2: contribution of first 10 variables")
```
:::

## K-means Clustering

::: panel-tabset
### Method

K-means is a clustering method that generates clusters based on the search for centers of gravity to which the mean distance from the associated data points is minimized. In order to apply this method, the number of clusters must first be determined. For this purpose, 24 different indices were evaluated using the `NBClust`-package. Among all indices:\

-   4 proposed 2 as the best number of clusters
-   5 proposed 3 as the best number of clusters
-   2 proposed 4 as the best number of clusters
-   10 proposed 5 as the best number of clusters
-   1 proposed 8 as the best number of clusters
-   1 proposed 9 as the best number of clusters
-   1 proposed 10 as the best number of clusters

According to the majority rule, the best number of clusters is 5.

### Results

```{r clustering}
#| label: clustering
#| echo: false
#| warning: false

data_cleaned_pc$PC1 <- pca_cleaned$x[,"PC1"]
data_cleaned_pc$PC2 <- pca_cleaned$x[,"PC2"]
data_cleaned_pc$PC3 <- pca_cleaned$x[,"PC3"]
data_cleaned_pc$PC4 <- pca_cleaned$x[,"PC4"]


# # automatic clustering ----------------------------------------------------
# automatic_clustering <- function(data){
#   library(NbClust)
# 
#   set.seed(123)
# 
#   data_clust <- data |>
#     scale() |>
#     NbClust(distance = "euclidean",
#             min.nc = 2,
#             max.nc = 10,
#             method = "kmeans",
#             index = "all")
# 
#   return(data_clust)
# }
# 
# # apply automatic clustering to identify optimal number of clusters
# auto_clust <- automatic_clustering(data = data_cleaned_pc |> dplyr::select(PC1:PC4))

# OPTIMAL NUMBER OF CLUSTERS: 4
no_clusters <- 5


# Apply clusters to data --------------------------------------------------

# create cluster file
data_clust <- eclust(data_cleaned_pc |> select(PC1:PC4),
                     FUNcluster = "kmeans",
                     k = no_clusters,
                     graph = FALSE)


# Assign the optimal partition to original dataset
data_cleaned_pc$cluster <- as.factor(data_clust$cluster)


# show cluster plot
fviz_cluster(data_clust,
             axes = c(1,2),
             palette = cols,
             ggtheme = theme_minimal(),
             main = "Bi-Plot Cluster on C 1&2",
             geom = "point"
)

fviz_cluster(data_clust,
             axes = c(1,3),
             palette = cols,
             ggtheme = theme_minimal(),
             main = "Bi-Plot Cluster on C 1&3",
             geom = "point"
)

fviz_cluster(data_clust,
             axes = c(1,4),
             palette = cols,
             ggtheme = theme_minimal(),
             main = "Bi-Plot Cluster on C 1&4",
             geom = "point"
)


# recreate biplot of PC1-PC2, colored by clusters 
# pca_cleaned_grouped <- FactoMineR::PCA(data_cleaned_pc |> dplyr::select(!fid), 
#                 scale.unit = TRUE,
#                 quali.sup = c("cluster"), 
#                 graph = FALSE)
# 
# factoextra::fviz_pca_ind(pca_cleaned_grouped,
#                          label = "none",
#                          habillage = "cluster",
#                          col.ind = "cluster",
#                          alpha.ind = 0.7,
#                          palette = cols,
#                          title = "PCA-Biplot 1-2: Quality of representation of individuals")

```

```{r boxplots clusters}
#| label: boxplots clusters
#| echo: false
#| warning: false

plot_jitterboxplots_pca <- function(data){
  
  p1 <- ggpubr::ggboxplot(data, x = "cluster", y = "PC1", add = "jitter", color = "cluster", palette = cols, ggtheme = theme_minimal()) 
  p2 <- ggpubr::ggboxplot(data, x = "cluster", y = "PC2", add = "jitter", color = "cluster", palette = cols, ggtheme = theme_minimal()) 
  p3 <- ggpubr::ggboxplot(data, x = "cluster", y = "PC3", add = "jitter", color = "cluster", palette = cols, ggtheme = theme_minimal()) 
  p4 <- ggpubr::ggboxplot(data, x = "cluster", y = "PC4", add = "jitter", color = "cluster", palette = cols, ggtheme = theme_minimal()) 
  
  plot <- ggpubr::ggarrange(p1, p2, p3, p4, ncol=2, nrow=2, legend="none")
  
  return(plot)
}

plot_jitterboxplots_pca(data_cleaned_pc |> dplyr::filter(fid <= 9041 & fid >=7623))

```

### Cluster characteristics

Based on the data-distributions, the main characteristics of the clusters are summarized in the following table:

+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| Cluster  | Derived characteristics                                                                                                                                 |
+==========+=========================================================================================================================================================+
| **1**    | **Rivers confined by anthropogenized floodplain**                                                                                                       |
|          |                                                                                                                                                         |
|          | Rather confined, lower elevation rivers with altered riparian zone including diverse usages such as urban and agricultural infrastructure.              |
|          |                                                                                                                                                         |
|          | -   above average values: `PC4`, `PC1`                                                                                                                  |
+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| **2**    | **Larger rivers with agricultural landscape**                                                                                                           |
|          |                                                                                                                                                         |
|          | Larger rivers in wide valleys with low slopes and low elevations, with semi-intensive riparian corridor use due to agricultural activity.               |
|          |                                                                                                                                                         |
|          | -   above average values: `PC1`                                                                                                                         |
|          |                                                                                                                                                         |
|          | -   below average: `PC2`, `PC4`                                                                                                                         |
+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| **3**    | **Small upstream rivers**                                                                                                                               |
|          |                                                                                                                                                         |
|          | Smaller and unforested riparian corridors in higher elevations and with more natural open areas and grasslands and less activity in the adjacent areas. |
|          |                                                                                                                                                         |
|          | -   below average values: `PC1`, `PC3`                                                                                                                  |
+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| **4**    | **Forested medium-sized rivers**                                                                                                                        |
|          |                                                                                                                                                         |
|          | Large and forested riparian corridors in lower elevations with few grassland and natural open area.                                                     |
|          |                                                                                                                                                         |
|          | -   above average values: `PC3`                                                                                                                         |
+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| **5**    | **Diverse medium-sized and large rivers**                                                                                                               |
|          |                                                                                                                                                         |
|          | Medium-sized and larger streams in lower elevations with different landuse patterns and active channel sizes.                                           |
|          |                                                                                                                                                         |
|          | -   above average values: `PC1`, `PC2`, `PC3`                                                                                                           |
+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------+

: Characteristics of clusters

### Clusters on network map

```{r mapping clusters}
#| label: Mapping of clusters
#| echo: false
#| warning: false

cluster_sf <- network_sf |>
  dplyr::left_join(data_cleaned_pc, by = join_by(gid == fid)) |>
  dplyr::select(cluster) |>
  arrange(cluster)
# 
# plot(cluster_sf, pal = cols, main = "Network colored by cluster")

# in mapview:
mapv_colors <- mapv_colors(cluster_sf, "cluster", cols)
mapview(cluster_sf, zcol = "cluster", color = mapv_colors, lwd = 4)
```

### Cluster series Isère

```{r cluster series isere}
#| label: PCA series with cluster in background
#| echo: false
#| warning: false


# plot PC1 and PC2 over length
plot_pca <- function(data){
  
  p1 <- plot_pc(data, "fid", "PC1", "cluster", cols)
  p2 <- plot_pc(data, "fid", "PC2", "cluster", cols)
  p3 <- plot_pc(data, "fid", "PC3", "cluster", cols)
  p4 <- plot_pc(data, "fid", "PC4", "cluster", cols)
  plot <- ggpubr::ggarrange(p1, p2, p3, p4, ncol=1, nrow=4, 
                            common.legend = TRUE, legend="bottom")
  
  return(plot)
}

plot_pca(data_cleaned_pc |> dplyr::filter(fid <= 9041 & fid >=7623))
```
:::

## Hidden-Markov-Model

::: panel-tabset
### HMM-package

3-state HMM applied to the cluster series of the Isère River. Modeling is done via the `HMM`-package, using the *Baum-Welch algorithm* to fit the model and the *Viterbi algorithm* to compute most probable path of states.

```{r HMM}
#| echo: false
#| warning: false
isere <- data_cleaned_pc |> dplyr::filter(fid <= 9041 & fid >=7623)

# calculate initial cluster proportions
cluster_proportions <- round(table(isere$cluster)/length(isere$cluster), 2) # |> as.vector()

# initialize emission matrix, assigning to each state the probability to emit a certain cluster
M_E=matrix(c(cluster_proportions[1]+0.05, cluster_proportions[1], cluster_proportions[1]-0.05,
             cluster_proportions[2]-0.05, cluster_proportions[2], cluster_proportions[2]+0.05,
             cluster_proportions[3], cluster_proportions[3], cluster_proportions[3],
             cluster_proportions[4]-0.05, cluster_proportions[4], cluster_proportions[4]+0.05,
             cluster_proportions[5]+0.05, cluster_proportions[5], cluster_proportions[5]-0.05),
           nrow=3)
# rownames(M_E)=c("A","B", "c")
# colnames(M_E)=paste0("cluster",1:5)
# M_E

# initialize transition matrix to set up probabilities of switching to next state
M_T=matrix(c(.4,.3,.3,
             .3,.4,.3,
             .3,.3,.4),3)
# rownames(M_T)=c("A","B", "C")
# colnames(M_T)=c("A","B", "C")
# M_T

# initialize HMM
initial_HMM=HMM::initHMM(States=c("A","B", "C"),
                    Symbols=(1:5),
                    transProbs=M_T,
                    emissionProbs=M_E)

# fit HMM using Baum-Welch algorithm
hmm_fit= HMM::baumWelch(initial_HMM,na.omit(isere$cluster),maxIterations=100)$hmm

# set colors of states
colstates=c("A" = "#8338ec", "B" = "#83c5be", "C" = "#343a40")

# plot emission and transition probabilities via mosaic plots
layout(matrix(1:2,nrow=1))
par(las=1)
mosaicplot(hmm_fit$emissionProbs, main = "Emission Probabilities", col=cols)
mosaicplot(hmm_fit$transProbs, main = "Transition Probabilities", col=colstates)

# compute most probable path of states and add it to isere-dataset
isere$HMM_state = as.factor(HMM::viterbi(hmm_fit,na.omit(isere$cluster)))

plot_cluster_series <- plot_categ(data = isere, "fid", cat = "cluster", cols)
plot_hmm_series <- plot_categ(data = isere, "fid", cat = "HMM_state", colors = colstates)

ggpubr::ggarrange(plot_cluster_series, plot_hmm_series, ncol = 1, nrow = 2, 
                  common.legend = F, legend="bottom")

```

### depmixS4-package

Allows for multivariate modelling of hidden markov chains. First tries below, comparison plot as following:

1.  Cluster series on Isère

2.  HMM as previously presented

3.  depmix-model based on clusters

4.  depmix-model based on direct values of the four first principal components

```{r depmix clusters}
#| echo: false
#| warning: false
require(depmixS4)

# random number generator
set.seed(1)

# create model
mod_clust <- depmixS4::depmix(
  response = cluster~1, # cluster as response variable
  data = isere, # dataset with response variable
  nstates = 3, # number of states
  trstart = runif(9), # random uniform distribution of initial transition matrix
  family = multinomial() # setting response variables distribution family to multinomial for factors
)

# fit model
fm_clust <- depmixS4::fit(
  mod_clust, 
  emc = em.control(rand = FALSE)
)

# assign states to data
isere$state_depmix <- depmixS4::posterior(fm_clust)$state
```

```{r depmix pcs}
#| echo: false
#| warning: false
# random number generator
set.seed(1)

# create model
mod_pc <- depmixS4::depmix(
  list(PC1~1, PC2~1, PC3~1, PC4~1), # cluster as response variable
  data = isere, # dataset with response variable
  nstates = 3, # number of states
  trstart = runif(9), # random uniform distribution of initial transition matrix
  family = list(gaussian(), gaussian(), gaussian(), gaussian()) # setting response variables distribution family to multinomial for factors
)

# fit model
fm_pc <- depmixS4::fit(
  mod_pc, 
  emc = em.control(rand=FALSE)
)

# assign states to data
isere$state_pcs_depmix <- depmixS4::posterior(fm_pc)$state
```

```{r plot all series together}
#| echo: false
#| warning: false

isere <- isere |> mutate(state_depmix = as.factor(state_depmix), 
                         state_pcs_depmix = as.factor(state_pcs_depmix))

# set colors of states
colstates_depmix <- c("1" = "#8338ec", "2" = "#83c5be", "3" = "#343a40")

# 1 - k-means clustering
plot_cluster_series <- plot_categ(data = isere, "fid", cat = "cluster", cols)

# 2 - HMM
plot_hmm_series <- plot_categ(data = isere, "fid", cat = "HMM_state", colors = colstates)

# 3 - depmix clusters
plot_depmix_cluster_series <- plot_categ(data = isere, "fid", cat = "state_depmix", colors = colstates_depmix)

# 4 - depmix PCs
plot_depmix_pc_series <- plot_categ(data = isere, "fid", cat = "state_pcs_depmix", colors = colstates_depmix)


ggpubr::ggarrange(plot_cluster_series, plot_hmm_series, 
                  plot_depmix_cluster_series, plot_depmix_pc_series,
                  ncol = 1, nrow = 4, 
                  common.legend = F, legend = "none")

```
:::

## Next steps

-   remove "holes" in series-representation to fit longitudanal extent of stream segments well

-   use the `usethis`-package to hide password of database access

-   advance with dependent mixture / HMM model :

    -   multivariate modelling with [depmixS4-package](https://cran.r-project.org/web/packages/depmixS4/vignettes/depmixS4.pdf "https://cran.r-project.org/web/packages/depmixS4/vignettes/depmixS4.pdf")

    -   Can river network be modelled through a geographic tree structure and not a unidirectional chain, e.g. as in [Jiang et al. (2019)](https://ieeexplore.ieee.org/document/8769900/ "https://ieeexplore.ieee.org/document/8769900/") ?

-   start learning R-Shiny development (e.g. with Lise's course and ThinkR material)