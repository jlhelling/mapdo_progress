{"title":"Ideas for physical classifications of river networks","markdown":{"yaml":{"title":"Ideas for physical classifications of river networks","date":"06.06.2024","author":"Leo Helling","title-slide-attributes":{"data-background-color":"#023e8a"}},"headingText":"first ideas","containsRefs":false,"markdown":"\n\n```{r load data}\n#| echo: false\n#| output: false\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(leaflet)\nsource(\"~/repositories/mapdo_progress/src/f_classification.R\")\nload(\"~/repositories/mapdo_progress/data/network_dgo.rda\")\n\naxis <- network_dgo\n\n```\n\n\n-   Dominant land use\n-   Urban pressures\n-   Agricultural pressure\n-   Confinement\n-   Stream Power\n-   Sinuosity\n-   Channel Pattern\n\n## Dominant land use\n\nland use category with highest share of valley bottom area.\n\n-   urban areas + infrastructure\n\n-   agricultural land\n\n-   natural land (forest & grassland)\n\n```{r plot dominant land use}\n#| echo: false\n#| warning: false\n\ndf_dom_lu <- autoclass_dom_landuse(axis)\n\n\nleaflet::leaflet(df_dom_lu) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_dom_lu$color, opacity = 1) |> \n  addLegend(color = unique(df_dom_lu$color), labels = unique(df_dom_lu$metric_max))\n```\n\n## Urban pressure\n\n4 classes based on degree of urban landuse (could also be accumulated urban landuse from upstream areas!)\n\n-   \\>70 % highly urbanised\n-   \\>40 % urbanised\n-   \\>10 % moderately urbanised\n-   \\>0 % no urban land\n\n```{r plot urban land use}\n#| echo: false\n#| warning: false\n\ndf_classified_pc <- autoclass_pressures_pc(axis)\n\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_urban, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_urban), labels = unique(df_classified_pc$class_urban))\n\n```\n\n## Agricultural impact\n\n-   \\>70 % strong agricultural impact\n-   \\>40 % high agricultural impact\n-   \\>10 % moderate agricultural impact\n-   \\>0 % no agricultural impact at all\n\n```{r plot agricultural impact}\n#| echo: false\n#| warning: false\n\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_crops, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_crops), labels = unique(df_classified_pc$class_crops))\n```\n\n## Natural landuse\n\n-   \\>70 % very strong natural landuse\n-   \\>40 % strong natural landuse\n-   \\>10 % moderate natural landuse\n-   \\>0 % no natural landuse\n\n```{r plot natural impact}\n#| echo: false\n#| warning: false\n\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_natural, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_natural), labels = unique(df_classified_pc$class_natural))\n```\n\n\n## Confinement\n\nProposed confinement index from 0-1 divided into 4 classes:\n\n-   strongly confined: \\> 0\n-   confined: \\> 0.25\n-   weakly confined \\> 0.5\n-   unconfined \\> 0.75\n\nbased on the ratio between the active channel width and the valley bottom width\n\n```{r plot confinement classes}\n#| echo: false\n#| warning: false\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_confinement, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_confinement), labels = unique(df_classified_pc$class_confinement))\n```\n\n\n## Habitat Connectivity\n\nbased on share of connected corridor (includes active channel, natural corridor and semi-natural corridors) from valley bottom\nOR based on share of connected corridor from valley bottom excluding the active channel area\nOR based on the ratio of connected corridor width to active channel width !\n\n```{r plot habitat classes}\n#| echo: false\n#| warning: false\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_habitat, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_habitat), labels = unique(df_classified_pc$class_habitat))\n```\n\n\n## Active Channel Space\n\nProposed confinement index from 0-1 divided into 4 classes:\n\n-   abundant space: \\> 70\n-   space: \\> 40\n-   moderate space \\> 10\n-   confined \\> 0\n\nbased on the ratio between the active channel width and the valley bottom width\n\n```{r plot active channel classes}\n#| echo: false\n#| warning: false\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_ac, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_ac), labels = unique(df_classified_pc$class_ac))\n```\n\n\n## Stream Power\n\n***Idea:** get discharge values from RHT network and calculate Streampower for each segment:*\n  \n  $$\n  \\Omega=\\rho g Q S\n$$\n  \n  `Ω` is the stream power, `ρ` is the density of water (1000 kg/m^3^), `g` is gravitational acceleration (9.8 m/s^2^ ), `Q` is Discharge (m^3^/s), and `S` is the channel slope.\n\n\n## Sinuosity\n\n\n## Channel Pattern\n\n\n## Bed Material\n\nbased on grainsize distribution\n\n\n## Flow regime\n\nperennial or intermittent?\n\n\n## Topography\n\nbased on height and slope, e.g.\n\n- plaines de basse altitude (\\> 0 m & \\< 5 % slope)\n- plaines de moyenne altitude (\\> 300 m & \\< 5 % slope)\n- plaines de montagne (\\> 1000 m & \\< 5 % slope)\n- pentes de basse altitude (\\> 0 m & \\> 5 % slope)\n- pentes de moyenne altitude (\\> 300 m & \\> 5 % slope)\n- pentes de montagne (\\> 1000 m & \\> 5 % slope)\n\n```{r plot topographical classes}\n#| echo: false\n#| warning: false\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_topo, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_topo), labels = unique(df_classified_pc$class_topo))\n```\n\n## Gravel Bars presence\n\nAbsent, occasional, frequent\n\n\n## Slope Gradient\n\nlow, medium, high\n\n\n## Fragmentation\n\nbased on barriers present upstream\n\n\n## Integrated Approach\n\nAn integrated classification approach involves combining multiple metrics to create composite classes. For example:\n\nGeomorpho-Ecological Classification: Combining geomorphological features with ecological conditions (e.g., highland forested streams, lowland agricultural streams).\n\nHydro-Morphological Classification: Integrating hydrological regime with physical channel characteristics (e.g., perennial wide-shallow streams, ephemeral narrow-deep streams).\n","srcMarkdownNoYaml":"\n\n```{r load data}\n#| echo: false\n#| output: false\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(leaflet)\nsource(\"~/repositories/mapdo_progress/src/f_classification.R\")\nload(\"~/repositories/mapdo_progress/data/network_dgo.rda\")\n\naxis <- network_dgo\n\n```\n\n## first ideas\n\n-   Dominant land use\n-   Urban pressures\n-   Agricultural pressure\n-   Confinement\n-   Stream Power\n-   Sinuosity\n-   Channel Pattern\n\n## Dominant land use\n\nland use category with highest share of valley bottom area.\n\n-   urban areas + infrastructure\n\n-   agricultural land\n\n-   natural land (forest & grassland)\n\n```{r plot dominant land use}\n#| echo: false\n#| warning: false\n\ndf_dom_lu <- autoclass_dom_landuse(axis)\n\n\nleaflet::leaflet(df_dom_lu) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_dom_lu$color, opacity = 1) |> \n  addLegend(color = unique(df_dom_lu$color), labels = unique(df_dom_lu$metric_max))\n```\n\n## Urban pressure\n\n4 classes based on degree of urban landuse (could also be accumulated urban landuse from upstream areas!)\n\n-   \\>70 % highly urbanised\n-   \\>40 % urbanised\n-   \\>10 % moderately urbanised\n-   \\>0 % no urban land\n\n```{r plot urban land use}\n#| echo: false\n#| warning: false\n\ndf_classified_pc <- autoclass_pressures_pc(axis)\n\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_urban, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_urban), labels = unique(df_classified_pc$class_urban))\n\n```\n\n## Agricultural impact\n\n-   \\>70 % strong agricultural impact\n-   \\>40 % high agricultural impact\n-   \\>10 % moderate agricultural impact\n-   \\>0 % no agricultural impact at all\n\n```{r plot agricultural impact}\n#| echo: false\n#| warning: false\n\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_crops, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_crops), labels = unique(df_classified_pc$class_crops))\n```\n\n## Natural landuse\n\n-   \\>70 % very strong natural landuse\n-   \\>40 % strong natural landuse\n-   \\>10 % moderate natural landuse\n-   \\>0 % no natural landuse\n\n```{r plot natural impact}\n#| echo: false\n#| warning: false\n\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_natural, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_natural), labels = unique(df_classified_pc$class_natural))\n```\n\n\n## Confinement\n\nProposed confinement index from 0-1 divided into 4 classes:\n\n-   strongly confined: \\> 0\n-   confined: \\> 0.25\n-   weakly confined \\> 0.5\n-   unconfined \\> 0.75\n\nbased on the ratio between the active channel width and the valley bottom width\n\n```{r plot confinement classes}\n#| echo: false\n#| warning: false\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_confinement, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_confinement), labels = unique(df_classified_pc$class_confinement))\n```\n\n\n## Habitat Connectivity\n\nbased on share of connected corridor (includes active channel, natural corridor and semi-natural corridors) from valley bottom\nOR based on share of connected corridor from valley bottom excluding the active channel area\nOR based on the ratio of connected corridor width to active channel width !\n\n```{r plot habitat classes}\n#| echo: false\n#| warning: false\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_habitat, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_habitat), labels = unique(df_classified_pc$class_habitat))\n```\n\n\n## Active Channel Space\n\nProposed confinement index from 0-1 divided into 4 classes:\n\n-   abundant space: \\> 70\n-   space: \\> 40\n-   moderate space \\> 10\n-   confined \\> 0\n\nbased on the ratio between the active channel width and the valley bottom width\n\n```{r plot active channel classes}\n#| echo: false\n#| warning: false\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_ac, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_ac), labels = unique(df_classified_pc$class_ac))\n```\n\n\n## Stream Power\n\n***Idea:** get discharge values from RHT network and calculate Streampower for each segment:*\n  \n  $$\n  \\Omega=\\rho g Q S\n$$\n  \n  `Ω` is the stream power, `ρ` is the density of water (1000 kg/m^3^), `g` is gravitational acceleration (9.8 m/s^2^ ), `Q` is Discharge (m^3^/s), and `S` is the channel slope.\n\n\n## Sinuosity\n\n\n## Channel Pattern\n\n\n## Bed Material\n\nbased on grainsize distribution\n\n\n## Flow regime\n\nperennial or intermittent?\n\n\n## Topography\n\nbased on height and slope, e.g.\n\n- plaines de basse altitude (\\> 0 m & \\< 5 % slope)\n- plaines de moyenne altitude (\\> 300 m & \\< 5 % slope)\n- plaines de montagne (\\> 1000 m & \\< 5 % slope)\n- pentes de basse altitude (\\> 0 m & \\> 5 % slope)\n- pentes de moyenne altitude (\\> 300 m & \\> 5 % slope)\n- pentes de montagne (\\> 1000 m & \\> 5 % slope)\n\n```{r plot topographical classes}\n#| echo: false\n#| warning: false\n\nleaflet::leaflet(df_classified_pc) |> \n  addProviderTiles(providers$CartoDB.Positron) |> \n  addPolylines(color = df_classified_pc$color_topo, opacity = 1) |> \n  addLegend(color = unique(df_classified_pc$color_topo), labels = unique(df_classified_pc$class_topo))\n```\n\n## Gravel Bars presence\n\nAbsent, occasional, frequent\n\n\n## Slope Gradient\n\nlow, medium, high\n\n\n## Fragmentation\n\nbased on barriers present upstream\n\n\n## Integrated Approach\n\nAn integrated classification approach involves combining multiple metrics to create composite classes. For example:\n\nGeomorpho-Ecological Classification: Combining geomorphological features with ecological conditions (e.g., highland forested streams, lowland agricultural streams).\n\nHydro-Morphological Classification: Integrating hydrological regime with physical channel characteristics (e.g., perennial wide-shallow streams, ephemeral narrow-deep streams).\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"24-06-06_ideas_classification.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.42","editor":"visual","title":"Ideas for physical classifications of river networks","date":"06.06.2024","author":"Leo Helling","title-slide-attributes":{"data-background-color":"#023e8a"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}